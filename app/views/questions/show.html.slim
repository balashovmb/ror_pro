-content_for :title
  =@question.title
-cache [can?(:vote, @question), user_signed_in?, can?(:destroy, @question), can?(:edit, @question),
  can?(:create, Subscription) && can?(:destroy, Subscription), @question, @subscription] do
  .question data-id="#{@question.id}"
    .row
      .col-lg-1
        = render 'votes/votes', votable: @question
      .col-lg-6
        = render 'questions/question_show', question: @question
        .div id="Question-#{@question.id}-comments" class = 'question-comments'
          = render @question.comments
        .question-new-comment
          p= button_to 'Add comment', new_question_comment_path(@question), remote: true,
           method: :get, class:"btn btn-info"
        .subscription
          - if can?(:create, Subscription)
            p= render 'questions/subscription'
  hr
  .answers
    - if @question.answers.empty?
      b No answers
    - else
      = render @question.answers
  .new_answer
    - if can?(:create, Answer)
        .row
          .col-lg-6
            = form_for [@question, @answer], remote: true do |f|
              = f.label :body, 'Answer'
              .answer-errors
              = f.text_area :body, id: "new-answer-body", class: "form-control"
              p= link_to_add_association 'Add file', f, :attachments, partial: 'attachments/attachment_fields'
              p= f.submit 'Create answer', class: "btn btn-primary"
    - else
      i You must sign in first for create answer
br
- if @mobile
  |Просмотр с мобильного 

= link_to 'All questions', questions_path